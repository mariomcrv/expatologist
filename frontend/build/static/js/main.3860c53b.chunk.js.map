{"version":3,"sources":["constants/productConstants.js","constants/cartConstants.js","constants/userConstants.js","constants/orderConstants.js","store.js","reducers/productReducers.js","reducers/cartReducers.js","reducers/userReducers.js","reducers/orderReducers.js","actions/userActions.js","components/SearchBox.js","components/Header.js","components/Footer.js","components/Rating.js","components/Product.js","actions/productActions.js","screens/HomeScreen.js","components/DateTimePickerTest.js","screens/ProductScreen.js","screens/CartScreen.js","actions/cartActions.js","components/FormContainer.js","screens/LoginScreen.js","screens/RegisterScreen.js","screens/PlaceOrderScreen.js","actions/orderActions.js","screens/OrdersScreen.js","screens/OrderListScreen.js","screens/ProductListScreen.js","screens/ProductEditScreen.js","screens/OrderScreen.js","App.js","reportWebVitals.js","index.js"],"names":["PRODUCT_LIST_REQUEST","PRODUCT_LIST_SUCCESS","PRODUCT_LIST_FAIL","PRODUCT_DETAILS_REQUEST","PRODUCT_DETAILS_SUCCESS","PRODUCT_DETAILS_FAIL","PRODUCT_DELETE_REQUEST","PRODUCT_DELETE_SUCCESS","PRODUCT_DELETE_FAIL","PRODUCT_CREATE_REQUEST","PRODUCT_CREATE_SUCCESS","PRODUCT_CREATE_FAIL","PRODUCT_CREATE_RESET","PRODUCT_UPDATE_REQUEST","PRODUCT_UPDATE_SUCCESS","PRODUCT_UPDATE_FAIL","PRODUCT_UPDATE_RESET","CART_ADD_ITEM","CART_CLEAR_ITEMS","CART_REMOVE_ITEM","USER_LOGIN_REQUEST","USER_LOGIN_SUCCESS","USER_LOGIN_FAIL","USER_LOGOUT","USER_REGISTER_REQUEST","USER_REGISTER_SUCCESS","USER_REGISTER_FAIL","USER_DETAILS_REQUEST","USER_DETAILS_SUCCESS","USER_DETAILS_FAIL","USER_DETAILS_RESET","ORDER_CREATE_REQUEST","ORDER_CREATE_SUCCESS","ORDER_CREATE_FAIL","ORDER_CREATE_RESET","ORDER_DETAILS_REQUEST","ORDER_DETAILS_SUCCESS","ORDER_DETAILS_FAIL","ORDER_LIST_MY_REQUEST","ORDER_LIST_MY_SUCCESS","ORDER_LIST_MY_FAIL","ORDER_LIST_MY_RESET","ORDER_LIST_REQUEST","ORDER_LIST_SUCCESS","ORDER_LIST_FAIL","reducer","combineReducers","productList","state","products","action","type","loading","payload","error","productDetails","product","reviews","productDelete","success","productCreate","productUpdate","cart","cartItems","item","existItem","find","x","map","filter","userLogin","userInfo","userRegister","userDetails","user","orderCreate","order","orderListMy","orders","orderList","orderDetails","orderItems","initialState","localStorage","getItem","JSON","parse","middleware","thunk","store","createStore","composeWithDevTools","applyMiddleware","logout","dispatch","removeItem","SearchBox","history","useState","keyword","setKeyword","Form","onSubmit","e","preventDefault","trim","push","inline","className","Control","name","onChange","target","value","placeholder","Button","variant","Header","useDispatch","useSelector","Navbar","bg","expand","collapseOnSelect","Container","to","Brand","src","width","height","alt","Toggle","Collapse","id","render","Nav","Link","NavDropdown","title","Item","onClick","isAdmin","Footer","Row","Col","Rating","text","color","style","defaultProps","Product","Card","_id","Img","image","Body","Title","as","Text","brand","category","rating","numReviews","price","listProducts","a","axios","get","data","response","message","listProductDetails","HomeScreen","match","params","useEffect","Spinner","animation","sm","md","lg","xl","DateTimePickerTest","props","minDate","Date","dateInputRef","useRef","timeInputRef","handleInputChange","event","dateTimeData","date","current","time","onAddDateTime","min","format","change","ref","step","ProductScreen","React","disable","setDisable","setDate","setTime","Image","fluid","ListGroup","description","toString","substring","replace","disabled","CartScreen","location","productId","search","split","getState","setItem","stringify","addToCart","removeItemHandler","removeFromCart","length","size","reduce","acc","toFixed","FormContainer","children","xs","LoginScreen","email","setEmail","password","setPassword","redirect","Alert","config","headers","post","login","Group","controlId","Label","RegisterScreen","setName","confirmPassword","setConfirmPassword","setMessage","register","PlaceOrderScreen","itemsPrice","taxPrice","Number","totalPrice","index","rounded","ListGroupItem","Authorization","token","createOrder","OrdersScreen","loadingOrders","errorOrders","Table","striped","bordered","hover","responsive","createdAt","OrderListScreen","isPaid","paidAt","ProductListScreen","loadingDelete","errorDelete","successDelete","loadingCreate","errorCreate","successCreate","createdProduct","deleteHandler","window","confirm","delete","deleteProduct","ProductEditScreen","setPrice","setImage","setBrand","setCategory","setDescription","loadingUpdate","errorUpdate","successUpdate","put","updateProduct","required","Feedback","OrderScreen","orderId","App","path","component","exact","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","document","getElementById"],"mappings":"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","file":"static/js/main.3860c53b.chunk.js","sourcesContent":["\r\n// -- LIST OF THERAPISTS ---\r\nexport const PRODUCT_LIST_REQUEST = \"PRODUCT_LIST_REQUEST\"\r\nexport const PRODUCT_LIST_SUCCESS = \"PRODUCT_LIST_SUCCESS\"\r\nexport const PRODUCT_LIST_FAIL = \"PRODUCT_LIST_FAIL\"\r\n\r\n// -- THERAPIST DETAILS PAGE\r\nexport const PRODUCT_DETAILS_REQUEST = \"PRODUCT_DETAILS_REQUEST\"\r\nexport const PRODUCT_DETAILS_SUCCESS = \"PRODUCT_DETAILS_SUCCESS\"\r\nexport const PRODUCT_DETAILS_FAIL = \"PRODUCT_DETAILS_FAIL\"\r\n\r\n// -- REMOVE THERAPISTS\r\nexport const PRODUCT_DELETE_REQUEST = \"PRODUCT_DELETE_REQUEST\"\r\nexport const PRODUCT_DELETE_SUCCESS = \"PRODUCT_DELETE_SUCCESS\"\r\nexport const PRODUCT_DELETE_FAIL = \"PRODUCT_DELETE_FAIL\"\r\n\r\n// -- CREATE THERAPISTS\r\nexport const PRODUCT_CREATE_REQUEST = \"PRODUCT_CREATE_REQUEST\"\r\nexport const PRODUCT_CREATE_SUCCESS = \"PRODUCT_CREATE_SUCCESS\"\r\nexport const PRODUCT_CREATE_FAIL = \"PRODUCT_CREATE_FAIL\"\r\nexport const PRODUCT_CREATE_RESET = \"PRODUCT_CREATE_RESET\"\r\n\r\n// -- UPDATE THERAPISTS\r\nexport const PRODUCT_UPDATE_REQUEST = \"PRODUCT_UPDATE_REQUEST\"\r\nexport const PRODUCT_UPDATE_SUCCESS = \"PRODUCT_UPDATE_SUCCESS\"\r\nexport const PRODUCT_UPDATE_FAIL = \"PRODUCT_UPDATE_FAIL\"\r\nexport const PRODUCT_UPDATE_RESET = \"PRODUCT_UPDATE_RESET\"\r\n\r\n\r\n// this is the file where we store the constant cases\r\n// used in our reducers, since they do not change\r\n// it is considered good practise to keep it here","export const CART_ADD_ITEM = \"CART_ADD_ITEM\";\r\nexport const CART_CLEAR_ITEMS = 'CART_RESET'\r\nexport const CART_REMOVE_ITEM = \"CART_REMOVE_ITEM\";\r\n\r\n","// THIS FILE CONTAINS THE CONSTANTS THAT I WILL USE TO CREATE\r\n// REDUCER -> STORE -> ACTIONS -> UI\r\n\r\nexport const USER_LOGIN_REQUEST = 'USER_LOGIN_REQUEST'\r\nexport const USER_LOGIN_SUCCESS = 'USER_LOGIN_SUCCESS'\r\nexport const USER_LOGIN_FAIL = 'USER_LOGIN_FAIL'\r\nexport const USER_LOGOUT = 'USER_LOGOUT'\r\n\r\nexport const USER_REGISTER_REQUEST = 'USER_REGISTER_REQUEST'\r\nexport const USER_REGISTER_SUCCESS = 'USER_REGISTER_SUCCESS'\r\nexport const USER_REGISTER_FAIL = 'USER_REGISTER_FAIL'\r\n\r\nexport const USER_DETAILS_REQUEST = 'USER_DETAILS_REQUEST'\r\nexport const USER_DETAILS_SUCCESS = 'USER_DETAILS_SUCCESS'\r\nexport const USER_DETAILS_FAIL = 'USER_DETAILS_FAIL'\r\nexport const USER_DETAILS_RESET = 'USER_DETAILS_RESET'","export const ORDER_CREATE_REQUEST = 'ORDER_CREATE_REQUEST'\r\nexport const ORDER_CREATE_SUCCESS = 'ORDER_CREATE_SUCCESS'\r\nexport const ORDER_CREATE_FAIL = 'ORDER_CREATE_FAIL'\r\nexport const ORDER_CREATE_RESET = 'ORDER_CREATE_RESET' // this is to reset the status in the order creation\r\n\r\n// constants to retreive the orders by id\r\n\r\n// constants to retreive orders\r\nexport const ORDER_DETAILS_REQUEST = 'ORDER_DETAILS_REQUEST'\r\nexport const ORDER_DETAILS_SUCCESS = 'ORDER_DETAILS_SUCCESS'\r\nexport const ORDER_DETAILS_FAIL = 'ORDER_DETAILS_FAIL'\r\n\r\n\r\n// constants to retreive orders\r\nexport const ORDER_LIST_MY_REQUEST = 'ORDER_LIST_MY_REQUEST'\r\nexport const ORDER_LIST_MY_SUCCESS = 'ORDER_LIST_MY_SUCCESS'\r\nexport const ORDER_LIST_MY_FAIL = 'ORDER_LIST_MY_FAIL'\r\nexport const ORDER_LIST_MY_RESET = 'ORDER_LIST_MY_RESET'\r\n\r\n// constant to retreive admin orders\r\nexport const ORDER_LIST_REQUEST = 'ORDER_LIST_REQUEST'\r\nexport const ORDER_LIST_SUCCESS = 'ORDER_LIST_SUCCESS'\r\nexport const ORDER_LIST_FAIL = 'ORDER_LIST_FAIL'\r\n","// Thi is the order\r\n// create store allows us to as it says, create the store\r\n// combineReduces, if we have many reducers handling peaces of functionality, this combines them\r\n// applyMiddleware, this allows us to use middleware like thunk\r\n// composeWithDevTools, necessary to use the chrome extension\r\n\r\nimport { createStore, combineReducers, applyMiddleware } from \"redux\";\r\nimport thunk from \"redux-thunk\";\r\nimport { composeWithDevTools } from \"redux-devtools-extension\";\r\nimport {\r\n  productListReducer,\r\n  productDetailsReducer,\r\n  productDeleteReducer,\r\n  productCreateReducer,\r\n  productUpdateReducer,\r\n} from \"./reducers/productReducers\";\r\nimport { cartReducer } from \"./reducers/cartReducers\";\r\nimport {\r\n  userLoginReducer,\r\n  userRegisterReducer,\r\n  userDetailsReducer,\r\n} from \"./reducers/userReducers\";\r\nimport {\r\n  orderCreateReducer,\r\n  orderDetailsReducer,\r\n  orderListMyReducer,\r\n  orderListReducer,\r\n} from \"./reducers/orderReducers\";\r\n\r\nconst reducer = combineReducers({\r\n  productList: productListReducer,\r\n  productDetails: productDetailsReducer,\r\n  productDelete: productDeleteReducer,\r\n  productCreate: productCreateReducer,\r\n  productUpdate: productUpdateReducer,\r\n  cart: cartReducer,\r\n  userLogin: userLoginReducer,\r\n  userRegister: userRegisterReducer,\r\n  userDetails: userDetailsReducer,\r\n  orderCreate: orderCreateReducer,\r\n  orderListMy: orderListMyReducer,\r\n  orderList: orderListReducer,\r\n  orderDetails: orderDetailsReducer,\r\n}); // here we pass our reducers, check it is formatted as an object\r\n\r\n// with this const we can bring the content from cart in our localstorage, parse it into a string and put it into my initial state\r\nconst cartItemsFromStorage = localStorage.getItem(\"cartItems\")\r\n  ? JSON.parse(localStorage.getItem(\"cartItems\"))\r\n  : [];\r\n\r\n// with this constant I can retrieve the content from the local storage\r\nconst userInfoFromStorage = localStorage.getItem(\"userInfo\")\r\n  ? JSON.parse(localStorage.getItem(\"userInfo\"))\r\n  : null;\r\n\r\nconst initialState = {\r\n  cart: { cartItems: cartItemsFromStorage },\r\n  userLogin: { userInfo: userInfoFromStorage },\r\n}; // what is loaded from the beginning\r\n\r\nconst middleware = [thunk]; // at the moment, thunk is the middleware I will use\r\n\r\n// store takes three arguments, the reducer, initialState and composewithDevTools\r\n// composeWithDevTools takes the applyMiddleware module and accepts an array of middleware using the spread operator\r\nconst store = createStore(\r\n  reducer,\r\n  initialState,\r\n  composeWithDevTools(applyMiddleware(...middleware)) // we do not need brakets because we are spreading the array\r\n);\r\n\r\nexport default store;\r\n\r\n// make sure for every reducer, there is an action\r\n","// the reducer takes in two things, initialState and an action\r\n// based on the action we decided what to do, either a function or a payload\r\nimport {\r\n  PRODUCT_LIST_REQUEST,\r\n  PRODUCT_LIST_SUCCESS,\r\n  PRODUCT_LIST_FAIL,\r\n  PRODUCT_DETAILS_REQUEST,\r\n  PRODUCT_DETAILS_SUCCESS,\r\n  PRODUCT_DETAILS_FAIL,\r\n  PRODUCT_DELETE_REQUEST,\r\n  PRODUCT_DELETE_SUCCESS,\r\n  PRODUCT_DELETE_FAIL,\r\n  PRODUCT_CREATE_REQUEST,\r\n  PRODUCT_CREATE_SUCCESS,\r\n  PRODUCT_CREATE_FAIL,\r\n  PRODUCT_CREATE_RESET,\r\n  PRODUCT_UPDATE_REQUEST,\r\n  PRODUCT_UPDATE_SUCCESS,\r\n  PRODUCT_UPDATE_FAIL,\r\n  PRODUCT_UPDATE_RESET,\r\n} from \"../constants/productConstants\";\r\n\r\n// -- THERAPIST LIST REDUCER --\r\n\r\nexport const productListReducer = (state = { products: [] }, action) => {\r\n  switch (action.type) {\r\n    case PRODUCT_LIST_REQUEST:\r\n      return { loading: true, products: [] }; // when we make the request, we let know the component that we are loading data and return an empty array\r\n    case PRODUCT_LIST_SUCCESS:\r\n      return { loading: false, products: action.payload }; // when we get the response back, laoding is false because we are done and put the payload in the action object\r\n    case PRODUCT_LIST_FAIL:\r\n      return { loading: false, error: action.payload }; // if fail, we return loading false and the error in the payload\r\n    default:\r\n      return state; // default case, just return the state\r\n  }\r\n};\r\n\r\n// -- THERAPIST DETAILS REDUCER --\r\n\r\nexport const productDetailsReducer = (\r\n  state = { product: { reviews: [] } },\r\n  action\r\n) => {\r\n  switch (action.type) {\r\n    case PRODUCT_DETAILS_REQUEST:\r\n      return { loading: true, ...state }; // whatever is in the state, will be spreaded, same as sending an empty object\r\n    case PRODUCT_DETAILS_SUCCESS:\r\n      return { loading: false, product: action.payload };\r\n    case PRODUCT_DETAILS_FAIL:\r\n      return { loading: false, error: action.payload };\r\n    default:\r\n      return state; // default case, just return the state\r\n  }\r\n};\r\n\r\n// delete counsellor reducer\r\n\r\nexport const productDeleteReducer = (state = {}, action) => {\r\n  switch (action.type) {\r\n    case PRODUCT_DELETE_REQUEST:\r\n      return { loading: true };\r\n    case PRODUCT_DELETE_SUCCESS:\r\n      return { loading: false, success: true };\r\n    case PRODUCT_DELETE_FAIL:\r\n      return { loading: false, error: action.payload };\r\n    default:\r\n      return state;\r\n  }\r\n};\r\n\r\n// create counsellor reducer\r\nexport const productCreateReducer = (state = {}, action) => {\r\n  switch (action.type) {\r\n    case PRODUCT_CREATE_REQUEST:\r\n      return { loading: true };\r\n    case PRODUCT_CREATE_SUCCESS:\r\n      return { loading: false, success: true, product: action.payload };\r\n    case PRODUCT_CREATE_FAIL:\r\n      return { loading: false, error: action.payload };\r\n      case PRODUCT_CREATE_RESET:\r\n        return {}\r\n    default:\r\n      return state;\r\n  }\r\n};\r\n\r\n// update counsellor reducer\r\nexport const productUpdateReducer = (state = { product: {} }, action) => {\r\n  switch (action.type) {\r\n    case PRODUCT_UPDATE_REQUEST:\r\n      return { loading: true };\r\n    case PRODUCT_UPDATE_SUCCESS:\r\n      return { loading: false, success: true, product: action.payload };\r\n    case PRODUCT_UPDATE_FAIL:\r\n      return { loading: false, error: action.payload };\r\n      case PRODUCT_UPDATE_RESET:\r\n        return {product: {}}  // empty object\r\n    default:\r\n      return state;\r\n  }\r\n};\r\n\r\n// we need to add this to the store\r\n// no need to declare the export default\r\n// we already did it when we declared the function above, check line 4\r\n// IMPORTANT. Remember import the reducers in the store.js\r\n","import {\r\n  CART_ADD_ITEM,\r\n  CART_REMOVE_ITEM,\r\n  CART_CLEAR_ITEMS,\r\n} from \"../constants/cartConstants\";\r\n\r\nexport const cartReducer = (\r\n  state = {\r\n    cartItems: [],\r\n  },\r\n  action\r\n) => {\r\n  switch (action.type) {\r\n    case CART_ADD_ITEM:\r\n      const item = action.payload;\r\n\r\n      const existItem = state.cartItems.find((x) => x.product === item.product);\r\n\r\n      if (existItem) {\r\n        return {\r\n          ...state,\r\n          cartItems: state.cartItems.map((x) =>\r\n            x.product === existItem.product ? item : x\r\n          ),\r\n        };\r\n      } else {\r\n        return {\r\n          ...state,\r\n          cartItems: [...state.cartItems, item],\r\n        };\r\n      }\r\n\r\n    // this case removes the item matching the payload from the cart\r\n    case CART_REMOVE_ITEM:\r\n      return {\r\n        ...state,\r\n        cartItems: state.cartItems.filter((x) => x.product !== action.payload),\r\n      };\r\n      // this function removes the content from the cart and sets an empty array\r\n    case CART_CLEAR_ITEMS:\r\n      return {\r\n        ...state,\r\n        cartItems: [],\r\n      };\r\n\r\n    default:\r\n      return state;\r\n  }\r\n};\r\n","import {\r\n  USER_DETAILS_FAIL,\r\n  USER_DETAILS_REQUEST,\r\n  USER_DETAILS_SUCCESS,\r\n  USER_DETAILS_RESET,\r\n  USER_LOGIN_FAIL,\r\n  USER_LOGIN_REQUEST,\r\n  USER_LOGIN_SUCCESS,\r\n  USER_LOGOUT,\r\n  USER_REGISTER_FAIL,\r\n  USER_REGISTER_REQUEST,\r\n  USER_REGISTER_SUCCESS,\r\n} from \"../constants/userConstants\";\r\n\r\n// -- USER LOGIN REDUCER\r\n\r\nexport const userLoginReducer = (state = {}, action) => {\r\n  // my state here is an empty object\r\n  switch (action.type) {\r\n    case USER_LOGIN_REQUEST:\r\n      return { loading: true }; // when we make the request, we let know the component that we are loading data and return an empty array\r\n    case USER_LOGIN_SUCCESS:\r\n      return { loading: false, userInfo: action.payload }; // when we get the response back, laoding is false because we are done and put the payload in the action object\r\n    case USER_LOGIN_FAIL:\r\n      return { loading: false, error: action.payload }; // if fail, we return loading false and the error in the payload\r\n    case USER_LOGOUT:\r\n      return {}; // return and empty object when we logout\r\n    default:\r\n      return state; // default case, just return the state\r\n  }\r\n};\r\n\r\n//-- USER REGISTRATION REDUCER\r\n\r\nexport const userRegisterReducer = (state = {}, action) => {\r\n  // my state here is an empty object\r\n  switch (action.type) {\r\n    case USER_REGISTER_REQUEST:\r\n      return { loading: true }; // when we make the request, we let know the component that we are loading data and return an empty array\r\n    case USER_REGISTER_SUCCESS:\r\n      return { loading: false, userInfo: action.payload }; // when we get the response back, laoding is false because we are done and put the payload in the action object\r\n    case USER_REGISTER_FAIL:\r\n      return { loading: false, error: action.payload }; // if fail, we return loading false and the error in the payload\r\n    default:\r\n      return state; // default case, just return the state\r\n  }\r\n};\r\n\r\nexport const userDetailsReducer = (state = { user: {} }, action) => {\r\n  switch (action.type) {\r\n    case USER_DETAILS_REQUEST:\r\n      return { ...state, loading: true }\r\n    case USER_DETAILS_SUCCESS:\r\n      return { loading: false, user: action.payload }\r\n    case USER_DETAILS_FAIL:\r\n      return { loading: false, error: action.payload }\r\n    case USER_DETAILS_RESET:\r\n      return { user: {} }\r\n    default:\r\n      return state\r\n  }\r\n}\r\n\r\n// add this to the store\r\n","import {\r\n  ORDER_CREATE_REQUEST,\r\n  ORDER_CREATE_SUCCESS,\r\n  ORDER_CREATE_FAIL,\r\n  ORDER_CREATE_RESET,\r\n  ORDER_DETAILS_REQUEST,\r\n  ORDER_DETAILS_SUCCESS,\r\n  ORDER_DETAILS_FAIL,\r\n  ORDER_LIST_MY_REQUEST,\r\n  ORDER_LIST_MY_SUCCESS,\r\n  ORDER_LIST_MY_FAIL,\r\n  ORDER_LIST_MY_RESET,\r\n  ORDER_LIST_REQUEST,\r\n  ORDER_LIST_SUCCESS,\r\n  ORDER_LIST_FAIL,\r\n} from \"../constants/orderConstants\";\r\n\r\nexport const orderCreateReducer = (state = {}, action) => {\r\n  switch (action.type) {\r\n    case ORDER_CREATE_REQUEST:\r\n      return {\r\n        loading: true,\r\n      };\r\n    case ORDER_CREATE_SUCCESS:\r\n      return {\r\n        loading: false,\r\n        success: true,\r\n        order: action.payload,\r\n      };\r\n    case ORDER_CREATE_FAIL:\r\n      return {\r\n        loading: false,\r\n        error: action.payload,\r\n      };\r\n    case ORDER_CREATE_RESET: // CLREAR THE CREATE ORDER STATUS\r\n      return {};\r\n    default:\r\n      return state;\r\n  }\r\n};\r\n\r\n// order by id reducer\r\nexport const orderDetailsReducer = (state = {loading: true, orderItems: []}, action) => {\r\n  switch (action.type) {\r\n    case ORDER_DETAILS_REQUEST:\r\n      return {\r\n        ...state,\r\n        loading: true,\r\n      };\r\n    case ORDER_DETAILS_SUCCESS:\r\n      return {\r\n        loading: false,\r\n        order: action.payload,\r\n      };\r\n    case ORDER_DETAILS_FAIL:\r\n      return {\r\n        loading: false,\r\n        error: action.payload,\r\n      };\r\n    default:\r\n      return state;\r\n  }\r\n};\r\n\r\n\r\nexport const orderListMyReducer = (state = { orders: [] }, action) => {\r\n  switch (action.type) {\r\n    case ORDER_LIST_MY_REQUEST:\r\n      return {\r\n        loading: true,\r\n      };\r\n    case ORDER_LIST_MY_SUCCESS:\r\n      return {\r\n        loading: false,\r\n        orders: action.payload,\r\n      };\r\n    case ORDER_LIST_MY_FAIL:\r\n      return {\r\n        loading: false,\r\n        error: action.payload,\r\n      };\r\n    case ORDER_LIST_MY_RESET:\r\n      return { orders: [] };\r\n    default:\r\n      return state;\r\n  }\r\n};\r\n\r\nexport const orderListReducer = (state = { orders: [] }, action) => {\r\n  switch (action.type) {\r\n    case ORDER_LIST_REQUEST:\r\n      return {\r\n        loading: true,\r\n      };\r\n    case ORDER_LIST_SUCCESS:\r\n      return {\r\n        loading: false,\r\n        orders: action.payload,\r\n      };\r\n    case ORDER_LIST_FAIL:\r\n      return {\r\n        loading: false,\r\n        error: action.payload,\r\n      };\r\n    default:\r\n      return state;\r\n  }\r\n};\r\n","import {\r\n  USER_DETAILS_FAIL,\r\n  USER_DETAILS_REQUEST,\r\n  USER_DETAILS_SUCCESS,\r\n  USER_DETAILS_RESET,\r\n  USER_LOGIN_FAIL,\r\n  USER_LOGIN_REQUEST,\r\n  USER_LOGIN_SUCCESS,\r\n  USER_LOGOUT,\r\n  USER_REGISTER_FAIL,\r\n  USER_REGISTER_REQUEST,\r\n  USER_REGISTER_SUCCESS,\r\n} from \"../constants/userConstants\";\r\nimport {ORDER_LIST_MY_RESET} from '../constants/orderConstants'\r\nimport axios from \"axios\";\r\n\r\n// --  LOGIN ACTION\r\n\r\nexport const login = (email, password) => async (dispatch) => {\r\n  try {\r\n    dispatch({\r\n      type: USER_LOGIN_REQUEST,\r\n    });\r\n\r\n    const config = {\r\n      headers: {\r\n        \"Content-type\": \"application/json\",\r\n      },\r\n    };\r\n\r\n    const { data } = await axios.post(\r\n      \"/api/users/login\",\r\n      {\r\n        email,\r\n        password,\r\n      },\r\n      config\r\n    );\r\n\r\n    dispatch({\r\n      type: USER_LOGIN_SUCCESS,\r\n      payload: data,\r\n    });\r\n\r\n    localStorage.setItem(\"userInfo\", JSON.stringify(data)); // remember we can store strings only in local storage\r\n  } catch (error) {\r\n    // we can copy and paste from previous errors\r\n    dispatch({\r\n      type: USER_LOGIN_FAIL,\r\n      payload:\r\n        error.response && error.response.data.message\r\n          ? error.response.data.message\r\n          : error.message,\r\n    });\r\n  }\r\n};\r\n\r\n// -- LOGOUT ACTION\r\n\r\nexport const logout = () => (dispatch) => {\r\n  localStorage.removeItem(\"userInfo\");\r\n  dispatch({ type: USER_LOGOUT });\r\n  dispatch({ type: USER_DETAILS_RESET });\r\n  dispatch({ type: ORDER_LIST_MY_RESET });\r\n\r\n};\r\n\r\n// --  REGISTER ACTION\r\n\r\nexport const register = (name, email, password) => async (dispatch) => {\r\n  try {\r\n    dispatch({\r\n      type: USER_REGISTER_REQUEST,\r\n    });\r\n\r\n    const config = {\r\n      headers: {\r\n        \"Content-type\": \"application/json\",\r\n      },\r\n    };\r\n\r\n    const { data } = await axios.post(\r\n      \"/api/users\",\r\n      { name, email, password },\r\n      config\r\n    );\r\n\r\n    dispatch({\r\n      type: USER_REGISTER_SUCCESS,\r\n      payload: data,\r\n    });\r\n\r\n    // when the user registers, I logged them in by dispatching this function\r\n    dispatch({\r\n      type: USER_LOGIN_SUCCESS,\r\n      payload: data,\r\n    });\r\n\r\n    // I keep the same effect as the login as I want to keep the info in local storage\r\n    localStorage.setItem(\"userInfo\", JSON.stringify(data)); // remember we can store strings only in local storage\r\n  } catch (error) {\r\n    // we can copy and paste from previous errors\r\n    dispatch({\r\n      type: USER_REGISTER_FAIL,\r\n      payload:\r\n        error.response && error.response.data.message\r\n          ? error.response.data.message\r\n          : error.message,\r\n    });\r\n  }\r\n};\r\n\r\nexport const getUserDetails = (id) => async (dispatch, getState) => {\r\n  try {\r\n    dispatch({\r\n      type: USER_DETAILS_REQUEST,\r\n    })\r\n\r\n    const {\r\n      userLogin: { userInfo },\r\n    } = getState()\r\n\r\n    const config = {\r\n      headers: {\r\n        Authorization: `Bearer ${userInfo.token}`,\r\n      },\r\n    }\r\n\r\n    const { data } = await axios.get(`/api/users/${id}`, config)\r\n\r\n    dispatch({\r\n      type: USER_DETAILS_SUCCESS,\r\n      payload: data,\r\n    })\r\n  } catch (error) {\r\n    const message =\r\n      error.response && error.response.data.message\r\n        ? error.response.data.message\r\n        : error.message\r\n    if (message === 'Not authorized, token failed') {\r\n      dispatch(logout())\r\n    }\r\n    dispatch({\r\n      type: USER_DETAILS_FAIL,\r\n      payload: message,\r\n    })\r\n  }\r\n}\r\n","import React, { useState } from \"react\";\r\nimport { Form, Button } from \"react-bootstrap\";\r\n\r\nconst SearchBox = ({ history }) => {\r\n  const [keyword, setKeyword] = useState(\"\");\r\n\r\n  const submitHandler = (e) => {\r\n    e.preventDefault();\r\n    if (keyword.trim()) {\r\n      history.push(`/search/${keyword}`);\r\n    } else {\r\n      history.push(\"/\");\r\n    }\r\n  };\r\n\r\n  return (\r\n    <div>\r\n    <Form onSubmit={submitHandler} inline className=\"text-center\">\r\n      <Form.Control\r\n        type='text'\r\n        name='q'\r\n        onChange={(e) => setKeyword(e.target.value)}\r\n        placeholder='Find a Counsellor...'\r\n        className='mr-sm-2 ml-sm-5 rounded-pill'\r\n      ></Form.Control>\r\n      <Button type='submit' variant='outline-light' className='btn p-2 rounded-circle'> GO!! \r\n      </Button>\r\n    </Form>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default SearchBox;\r\n","import React from \"react\";\r\nimport { Route } from \"react-router-dom\";\r\n// To bring info from the redux state, I need to import dispatch and selector\r\nimport { useDispatch, useSelector } from \"react-redux\";\r\nimport { LinkContainer } from \"react-router-bootstrap\";\r\nimport { Navbar, Nav, Container, NavDropdown } from \"react-bootstrap\";\r\nimport { logout } from \"../actions/userActions\";\r\nimport SearchBox from \"./SearchBox\";\r\n\r\nconst Header = () => {\r\n  // dispatch the logout function\r\n  const dispatch = useDispatch();\r\n\r\n  // bring user info from the state\r\n  // we can set conditional statements to show info on the navbar\r\n  // if we have user info or not\r\n  const userLogin = useSelector((state) => state.userLogin);\r\n  const { userInfo } = userLogin; // i want the user info fomr the userLogin\r\n\r\n  // LOGOUT HANDLER\r\n  const logoutHandler = () => {\r\n    dispatch(logout());\r\n  };\r\n\r\n  return (\r\n    <header>\r\n      <Navbar bg='info' variant='dark' expand='lg' collapseOnSelect>\r\n        <Container>\r\n          <LinkContainer to='/'>\r\n            <Navbar.Brand>\r\n              {\" \"}\r\n              <img\r\n                src='/nav_bar_logo.png'\r\n                width='30'\r\n                height='30'\r\n                className='d-inline-block align-top'\r\n                alt='brain logo'\r\n              />{\" \"}\r\n              Expatologist\r\n            </Navbar.Brand>\r\n          </LinkContainer>\r\n          <Navbar.Toggle aria-controls='basic-navbar-nav' />\r\n          <Navbar.Collapse id='basic-navbar-nav'>\r\n            <Route render={({ history }) => <SearchBox history={history} />} />\r\n            <Nav className='ml-auto'>\r\n              <LinkContainer to='/cart'>\r\n                <Nav.Link>\r\n                  <i className='fas fa-shopping-cart'></i>Cart\r\n                </Nav.Link>\r\n              </LinkContainer>\r\n              {userInfo ? (\r\n                <NavDropdown title={userInfo.name} id='username'>\r\n                  <LinkContainer to='/orders'>\r\n                    <NavDropdown.Item>My Bookings</NavDropdown.Item>\r\n                  </LinkContainer>\r\n                  <NavDropdown.Item onClick={logoutHandler}>\r\n                    Logout\r\n                  </NavDropdown.Item>\r\n                </NavDropdown>\r\n              ) : (\r\n                <LinkContainer to='/login'>\r\n                  <Nav.Link>\r\n                    <i className='fas fa-user'></i>Sign in or Register\r\n                  </Nav.Link>\r\n                </LinkContainer>\r\n              )}\r\n              {userInfo && userInfo.isAdmin && (\r\n                <NavDropdown title='Admin' id='adminmenu'>\r\n                  <LinkContainer to='/admin/productlist'>\r\n                    <NavDropdown.Item>Counsellors</NavDropdown.Item>\r\n                  </LinkContainer>\r\n                  <LinkContainer to='/admin/orderlist'>\r\n                    <NavDropdown.Item>Appointments</NavDropdown.Item>\r\n                  </LinkContainer>\r\n                </NavDropdown>\r\n              )}\r\n            </Nav>\r\n          </Navbar.Collapse>\r\n        </Container>\r\n      </Navbar>\r\n    </header>\r\n  );\r\n};\r\n\r\nexport default Header;\r\n","import React from \"react\";\r\nimport { Container, Row, Col } from \"react-bootstrap\";\r\n\r\nconst Footer = () => {\r\n  return (\r\n    <footer>\r\n      <Container className='py-3'>\r\n        <Row>\r\n          <Col className='text-center'>Copyright &copy; Expatologist 2XXX</Col>\r\n        </Row>\r\n        <Row>\r\n        <Col className='text-center py3'>\r\n        <i className=\"fab fa-instagram\"></i>\r\n        <i className=\"fab fa-facebook-f\"></i>\r\n        <i className=\"fab fa-linkedin-in\"></i>\r\n        </Col>\r\n        </Row>\r\n      </Container>\r\n    </footer>\r\n  );\r\n};\r\n\r\nexport default Footer;\r\n","import React from \"react\";\r\n// import PropTypes from 'prop-types'\r\n\r\n\r\nconst Rating = ({ value, text, color }) => {\r\n  return (\r\n    <div className='rating'>\r\n      <span>\r\n        <i\r\n          style={{ color }}\r\n          className={\r\n            value >= 1\r\n              ? \"fas fa-star\"\r\n              : value >= 0.5\r\n              ? \"fas fa-star-half-alt\"\r\n              : \"far fa-star\"\r\n          }\r\n        ></i>\r\n      </span>\r\n      <span>\r\n        <i\r\n          style={{ color }}\r\n          className={\r\n            value >= 2\r\n              ? \"fas fa-star\"\r\n              : value >= 1.5\r\n              ? \"fas fa-star-half-alt\"\r\n              : \"far fa-star\"\r\n          }\r\n        ></i>\r\n      </span>\r\n      <span>\r\n        <i\r\n          style={{ color }}\r\n          className={\r\n            value >= 3\r\n              ? \"fas fa-star\"\r\n              : value >= 2.5\r\n              ? \"fas fa-star-half-alt\"\r\n              : \"far fa-star\"\r\n          }\r\n        ></i>\r\n      </span>\r\n      <span>\r\n        <i\r\n          style={{ color }}\r\n          className={\r\n            value >= 4\r\n              ? \"fas fa-star\"\r\n              : value >= 3.5\r\n              ? \"fas fa-star-half-alt\"\r\n              : \"far fa-star\"\r\n          }\r\n        ></i>\r\n      </span>\r\n      <span>\r\n        <i\r\n          style={{ color }}\r\n          className={\r\n            value >= 5\r\n              ? \"fas fa-star\"\r\n              : value >= 4.5\r\n              ? \"fas fa-star-half-alt\"\r\n              : \"far fa-star\"\r\n          }\r\n        ></i>\r\n      </span>\r\n      <span>{text && text}</span>\r\n    </div>\r\n  );\r\n};\r\n\r\nRating.defaultProps = {\r\n    color: \"#f8e825\", // this is yellow\r\n  };\r\n\r\n  //This will type check the props and log errors\r\n  // Rating.propTypes = {\r\n  //     value: PropTypes.number.isRequired,\r\n  //     text: PropTypes.string.isRequired,\r\n  //     color: PropTypes.string,\r\n  // }\r\n\r\nexport default Rating;\r\n","import React from \"react\";\r\nimport { Link } from \"react-router-dom\";\r\nimport { Card } from \"react-bootstrap\";\r\nimport Rating from \"./Rating\";\r\n\r\nconst Product = ({ product }) => {\r\n  return (\r\n    <Card className='my-3 p-3 rounded'>\r\n      <Link to={`/product/${product._id}`}>\r\n        <Card.Img src={product.image} variant='top' className=\"rounded-circle\" />\r\n      </Link>\r\n      <Card.Body>\r\n        <Link to={`/product/${product._id}`}>\r\n          <Card.Title as='div' className='text-center'>\r\n            <strong>{product.name}</strong>\r\n          </Card.Title>\r\n        </Link>\r\n        <Card.Text as='div'>• {product.brand}</Card.Text>\r\n        <Card.Text as='div'>• {product.category}</Card.Text>\r\n\r\n        <Card.Text as='div'>\r\n          <Rating\r\n            value={product.rating}\r\n            text={`${product.numReviews} reviews`}\r\n          />\r\n        </Card.Text>\r\n\r\n        <Card.Text as='div'>€{product.price}</Card.Text>\r\n      </Card.Body>\r\n    </Card>\r\n  );\r\n};\r\n\r\nexport default Product;\r\n","// in this file we set all the actions related to\r\n// the reducers, the pattern would be something like this...\r\n// constants, reducer, action, and component\r\n\r\n// we need axios to call the api\r\nimport axios from \"axios\";\r\n\r\n// just like we did in the product reducer, we bring the contants\r\nimport {\r\n  PRODUCT_LIST_REQUEST,\r\n  PRODUCT_LIST_SUCCESS,\r\n  PRODUCT_LIST_FAIL,\r\n  PRODUCT_DETAILS_REQUEST,\r\n  PRODUCT_DETAILS_SUCCESS,\r\n  PRODUCT_DETAILS_FAIL,\r\n  PRODUCT_DELETE_REQUEST,\r\n  PRODUCT_DELETE_SUCCESS,\r\n  PRODUCT_DELETE_FAIL,\r\n  PRODUCT_CREATE_REQUEST,\r\n  PRODUCT_CREATE_SUCCESS,\r\n  PRODUCT_CREATE_FAIL,\r\n  PRODUCT_UPDATE_REQUEST,\r\n  PRODUCT_UPDATE_SUCCESS,\r\n  PRODUCT_UPDATE_FAIL,\r\n} from \"../constants/productConstants\";\r\nimport { logout } from \"./userActions\";\r\n\r\n// we need to export the actions\r\n// this action is going to do what we did in the home screen component, fetch information about the therapitst form the api\r\n// reducers are function and the actions are the actual magic ACTIONS!\r\n// redux-thunk allows us to create functions within functions,\r\n// check how after the first arrow we can add an async function.\r\n// dispatch is how we will dispatch the actions above\r\n\r\n// -- THERAPIST LIST ACTION --\r\n\r\nexport const listProducts =\r\n  (keyword = \"\") =>\r\n  async (dispatch) => {\r\n    try {\r\n      dispatch({ type: PRODUCT_LIST_REQUEST }); // we pass an object and the type is the request, check the reducer file to see what it does\r\n\r\n      const { data } = await axios.get(`/api/products?keyword=${keyword}`); // this call should give me the data\r\n\r\n      // at this moment we dispatch the data with an object, once the data is loaded\r\n      dispatch({\r\n        type: PRODUCT_LIST_SUCCESS,\r\n        payload: data,\r\n      });\r\n\r\n      // on error. We send an object back, the payload is the error message\r\n      // since I have custom error handling, I will send back the custom message\r\n      // on the other hand, send the actual error message\r\n    } catch (error) {\r\n      dispatch({\r\n        type: PRODUCT_LIST_FAIL,\r\n        payload:\r\n          error.response && error.response.data.message\r\n            ? error.response.data.message\r\n            : error.message,\r\n      });\r\n    }\r\n  };\r\n\r\n// -- THERAPIST DETAILS ACTION\r\n\r\nexport const listProductDetails = (id) => async (dispatch) => {\r\n  // when this action is called, it takes an id as a parameter\r\n  try {\r\n    dispatch({ type: PRODUCT_DETAILS_REQUEST }); // we pass an object and the type is the request, check the reducer file to see what it does\r\n\r\n    const { data } = await axios.get(`/api/products/${id}`); // this call should give me the data\r\n\r\n    // at this moment we dispatch the data with an object, once the data is loaded\r\n    dispatch({\r\n      type: PRODUCT_DETAILS_SUCCESS,\r\n      payload: data,\r\n    });\r\n\r\n    // on error. We send an object back, the payload is the error message\r\n    // since I have custom error handling, I will send back the custom message\r\n    // on the other hand, send the actual error message\r\n  } catch (error) {\r\n    dispatch({\r\n      type: PRODUCT_DETAILS_FAIL,\r\n      payload:\r\n        error.response && error.response.data.message\r\n          ? error.response.data.message\r\n          : error.message,\r\n    });\r\n  }\r\n};\r\n\r\n// delete product action\r\n\r\nexport const deleteProduct = (id) => async (dispatch, getState) => {\r\n  try {\r\n    dispatch({\r\n      type: PRODUCT_DELETE_REQUEST,\r\n    });\r\n\r\n    const {\r\n      userLogin: { userInfo },\r\n    } = getState();\r\n\r\n    const config = {\r\n      headers: {\r\n        Authorization: `Bearer ${userInfo.token}`,\r\n      },\r\n    };\r\n\r\n    await axios.delete(`/api/products/${id}`, config);\r\n\r\n    dispatch({\r\n      type: PRODUCT_DELETE_SUCCESS,\r\n    });\r\n  } catch (error) {\r\n    dispatch({\r\n      type: PRODUCT_DELETE_FAIL,\r\n      payload:\r\n        error.response && error.response.data.message\r\n          ? error.response.data.message\r\n          : error.message,\r\n    });\r\n  }\r\n};\r\n\r\n// create counsellor action\r\nexport const createProduct = () => async (dispatch, getState) => {\r\n  // does not take anything as we will create something\r\n  try {\r\n    dispatch({\r\n      type: PRODUCT_CREATE_REQUEST,\r\n    });\r\n\r\n    const {\r\n      userLogin: { userInfo },\r\n    } = getState();\r\n\r\n    const config = {\r\n      headers: {\r\n        Authorization: `Bearer ${userInfo.token}`,\r\n      },\r\n    };\r\n\r\n    const { data } = await axios.post(`/api/products`, {}, config);\r\n\r\n    dispatch({\r\n      type: PRODUCT_CREATE_SUCCESS,\r\n      payload: data,\r\n    });\r\n  } catch (error) {\r\n    dispatch({\r\n      type: PRODUCT_CREATE_FAIL,\r\n      payload:\r\n        error.response && error.response.data.message\r\n          ? error.response.data.message\r\n          : error.message,\r\n    });\r\n  }\r\n};\r\n\r\n// update counsellor action\r\n// we pass the product\r\nexport const updateProduct = (product) => async (dispatch, getState) => {\r\n  try {\r\n    dispatch({\r\n      type: PRODUCT_UPDATE_REQUEST,\r\n    });\r\n\r\n    const {\r\n      userLogin: { userInfo },\r\n    } = getState();\r\n\r\n    const config = {\r\n      headers: {\r\n        \"Content-Type\": \"application/json\",\r\n        Authorization: `Bearer ${userInfo.token}`,\r\n      },\r\n    };\r\n\r\n    const { data } = await axios.put(\r\n      `/api/products/${product._id}`,\r\n      product,\r\n      config\r\n    );\r\n\r\n    dispatch({\r\n      type: PRODUCT_UPDATE_SUCCESS,\r\n      payload: data,\r\n    });\r\n  } catch (error) {\r\n    dispatch({\r\n      type: PRODUCT_UPDATE_FAIL,\r\n      payload:\r\n        error.response && error.response.data.message\r\n          ? error.response.data.message\r\n          : error.message,\r\n    });\r\n  }\r\n};\r\n","import React from \"react\";\r\nimport { BrowserRouter as Router, Route } from 'react-router-dom'\r\nimport { useEffect } from \"react\"; // hook\r\nimport { useDispatch, useSelector } from \"react-redux\"; // usedispatch to call our actions and useSelector to select parts of the state\r\nimport { Row, Col, Spinner } from \"react-bootstrap\"; //Bootsrap dependencies\r\nimport Product from \"../components/Product\"; // component\r\nimport { listProducts } from \"../actions/productActions\"; // need to call our action\r\n\r\nconst HomeScreen = ({match}) => {\r\n\r\n  const keyword = match.params.keyword\r\n\r\n  const dispatch = useDispatch(); // this var will keep the hook useDispatch\r\n\r\n  const productList = useSelector((state) => state.productList); // useSelector allows us to grab info from the state once the action is fired off\r\n  const { loading, error, products } = productList; // here we breakdown the object into these parts of the state that could be sent\r\n\r\n  useEffect(() => { // here we fire off the action to get the info and put it in the state\r\n    //we put the function in useEffect, it does the request to the backend to get the list of therapists\r\n    dispatch(listProducts(keyword)); //dispatch the action, we do not need to pass any arguments\r\n  }, [dispatch, keyword]); //we put the dispatch dependency to avoid errors in the console\r\n\r\n\r\n  // I made some changes in the code below. We can diplay a spinner or a message\r\n  // when the information is bein loaded. we use the ternary operator to do so.\r\n  // if loading, display a message, \r\n  // else if, error display the error. I used the bootstrap Spinner component\r\n  // else, load the components\r\n  return (\r\n    <>\r\n      <h1>International Counsellors 🌍</h1>\r\n      {loading ? (\r\n        <Spinner animation=\"grow\" variant=\"primary\" />\r\n      ) : error ? (\r\n        <h3> {error}</h3>\r\n      ) : (\r\n        <Row>\r\n          {products.map(\r\n            (\r\n              product // here I render the Product cards in columns\r\n            ) => (\r\n              <Col key={product._id} sm={12} md={6} lg={4} xl={3}>\r\n                <Product product={product} />\r\n              </Col>\r\n            )\r\n          )}\r\n        </Row>\r\n      )}\r\n    </>\r\n  );\r\n};\r\n\r\nexport default HomeScreen;\r\n","import React, { useRef } from \"react\";\r\nimport {\r\n  DatePickerComponent,\r\n  TimePickerComponent,\r\n} from \"@syncfusion/ej2-react-calendars\";\r\nimport \"./DateTimePicker.module.css\";\r\n\r\nconst DateTimePickerTest = (props) => {\r\n  // i need use state to change the behavior of the button\r\n  // const [disable, setDisable] = React.useState(true);\r\n\r\n  const minDate = Date(); // witht this constant we wont be able to choose a day before the current one\r\n\r\n  // this constat will store the value of the input of the date field\r\n  const dateInputRef = useRef();\r\n  const timeInputRef = useRef();\r\n\r\n  // with this inputchange I can log the date field on change\r\n  const handleInputChange = (event) => {\r\n    // console.log(\"time \" + timeInputRef.current.value);\r\n    // console.log(\"date \" + dateInputRef.current.value);\r\n\r\n    // if (dateInputRef.current.value === null || timeInputRef.current.value === null) {\r\n    //   setDisable(true);\r\n    // } else {\r\n    //   setDisable(false);\r\n    // }\r\n\r\n    const enteredDate = dateInputRef.current.value; // when the event is triggered, we have a new constant to extract the value from the reference above\r\n    const enteredTime = timeInputRef.current.value;\r\n\r\n    const dateTimeData = {\r\n      date: enteredDate,\r\n      time: enteredTime,\r\n    };\r\n\r\n    props.onAddDateTime(dateTimeData);\r\n  };\r\n\r\n  // with this inputchange I can log the time field on change\r\n  // const handleTimeInputChange = (event) => {\r\n  //   if (dateInputRef.current.value === null && timeInputRef.current.value === null) {\r\n  //     setDisable(true)\r\n  //   } else {\r\n  //     setDisable(false)\r\n  //   }\r\n  // };\r\n\r\n  // this is the action where the button sends the data to the parent\r\n  // const submitHandler = (event) => {\r\n  //   console.log(\"vengo de del boton mi rey\");\r\n  // };\r\n\r\n  // on my button, I have to enable it when the date field is populated\r\n\r\n  return (\r\n    <div>\r\n      <DatePickerComponent\r\n        className='text-center'\r\n        placeholder='Date'\r\n        min={minDate}\r\n        format='dd-MMM-yyyy'\r\n        change={handleInputChange}\r\n        ref={dateInputRef}\r\n      ></DatePickerComponent>\r\n      <TimePickerComponent\r\n        className='text-center'\r\n        placeholder='Time'\r\n        step={60}\r\n        change={handleInputChange}\r\n        ref={timeInputRef}\r\n      ></TimePickerComponent>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default DateTimePickerTest;\r\n","import React, { useEffect } from \"react\";\r\nimport { Link } from \"react-router-dom\"; // the link function to move to another route\r\nimport { useDispatch, useSelector } from \"react-redux\";\r\nimport {\r\n  Row,\r\n  Col,\r\n  Image,\r\n  ListGroup,\r\n  Card,\r\n  Button,\r\n  Spinner,\r\n} from \"react-bootstrap\"; // more bootstrap components\r\nimport Rating from \"../components/Rating\"; // our rating component\r\nimport { listProductDetails } from \"../actions/productActions\";\r\nimport DateTimePickerTest from \"../components/DateTimePickerTest\";\r\n\r\n// match is the parameter to extract info from the url, and history leads to another page\r\nconst ProductScreen = ({ history, match }) => {\r\n  // this is how we use the match property comming from props\r\n  const dispatch = useDispatch();\r\n\r\n  // i need use state to change the behavior of the booking button and the state of the date and time params\r\n  const [disable, setDisable] = React.useState(true);\r\n  const [date, setDate] = React.useState(\"\");\r\n  const [time, setTime] = React.useState(\"\");\r\n\r\n  // date and time details, this function bring the info about the date and time\r\n  const dateTimeDataHadler = (dateTimeData) => {\r\n    if (dateTimeData.date === null || dateTimeData.time === null) {\r\n      setDisable(true);\r\n    } else {\r\n      setDisable(false);\r\n      setDate(dateTimeData.date.toString().substring(0, 15).replace(/\\s/g, \"-\")); // trim the date and time\r\n      setTime(dateTimeData.time.toString().substring(16, 24));\r\n    }\r\n  };\r\n\r\n  const productDetails = useSelector((state) => state.productDetails);\r\n  const { loading, error, product } = productDetails;\r\n\r\n  useEffect(() => {\r\n    dispatch(listProductDetails(match.params.id));\r\n  }, [dispatch, match]);\r\n\r\n  // with this handler I will pass the info to the cart\r\n  const addToCartHandler = () => {\r\n    history.push(`/cart/${match.params.id}?date=${date}?time=${time}`)\r\n  }\r\n\r\n  return (\r\n    <>\r\n      <Link className='btn btn-light my-3' to='/'>\r\n        Go Back\r\n      </Link>\r\n      {loading ? ( // if loading\r\n        <Spinner animation='border' variant='primary' />\r\n      ) : error ? ( // else if error\r\n        <h3> {error}</h3>\r\n      ) : (\r\n        // else\r\n        <Row>\r\n          <Col md={3}>\r\n            <Image src={product.image} alt={product.name} fluid className=\"rounded-circle\"></Image>\r\n          </Col>\r\n          <Col md={5}>\r\n            <ListGroup variant='flush'>\r\n              <ListGroup.Item>\r\n                <h3>{product.name}</h3>\r\n                <h5>\r\n                  {product.brand} | {product.category}\r\n                </h5>\r\n              </ListGroup.Item>\r\n              <ListGroup.Item>\r\n                <Rating\r\n                  value={product.rating}\r\n                  text={`${product.numReviews} reviews`}\r\n                />\r\n              </ListGroup.Item>\r\n              <ListGroup.Item>Price: €{product.price}</ListGroup.Item>\r\n              <ListGroup.Item>\r\n                Description: {product.description}\r\n              </ListGroup.Item>\r\n            </ListGroup>\r\n          </Col>\r\n          <Col md={4}>\r\n            <Card>\r\n              <ListGroup variant='flush'>\r\n                <ListGroup.Item>\r\n                  <Row>\r\n                    <Col>Price:</Col>\r\n                    <Col>\r\n                      <strong>€{product.price}</strong>\r\n                    </Col>\r\n                  </Row>\r\n                </ListGroup.Item>\r\n                {/* <ListGroup.Item>\r\n                  <Row>\r\n                    <Col>Status:</Col>\r\n                    <Col>\r\n                      {product.countInStock > 0 ? \"In Stock\" : \"Out Of Stock\"}\r\n                    </Col>\r\n                  </Row>\r\n                </ListGroup.Item> */}\r\n                <ListGroup.Item>\r\n                  <DateTimePickerTest onAddDateTime={dateTimeDataHadler} />\r\n                </ListGroup.Item>\r\n                <ListGroup.Item>\r\n                  <Button\r\n                    className='btn-block'\r\n                    type='button'\r\n                    disabled={disable}\r\n                    onClick={addToCartHandler}\r\n                  >\r\n                    Book Appointment\r\n                  </Button>\r\n                </ListGroup.Item>\r\n              </ListGroup>\r\n            </Card>\r\n          </Col>\r\n        </Row>\r\n      )}\r\n    </>\r\n  );\r\n};\r\n\r\nexport default ProductScreen;\r\n","import React, { useEffect } from \"react\"; // useEffect hook to track changes\r\nimport { useDispatch, useSelector } from \"react-redux\";\r\nimport { Link } from \"react-router-dom\"; // links to move to another page\r\nimport {\r\n  Row,\r\n  Col,\r\n  ListGroup,\r\n  Image,\r\n  Form,\r\n  Button,\r\n  Card,\r\n} from \"react-bootstrap\"; // style components\r\nimport { addToCart, removeFromCart } from \"../actions/cartActions\"; // actions\r\n\r\n// rememeber Mario, here we deconstruct the props\r\n// location allows us to extract the params in the url\r\n// history, to redirect\r\nconst CartScreen = ({ match, location, history }) => {\r\n  // extract the product id from the url\r\n  const productId = match.params.id;\r\n\r\n  // extract the date and time params from the URL\r\n  const date = location.search\r\n    ? location.search.split(\"=\")[1].split(\"?\")[0]\r\n    : null;\r\n  const time = location.search ? location.search.split(\"=\")[2] : null;\r\n\r\n  // console.log(date)\r\n  // console.log(time)\r\n\r\n  const dispatch = useDispatch();\r\n\r\n  // useSelector to extract data from the state\r\n  const cart = useSelector((state) => state.cart);\r\n  const { cartItems } = cart;\r\n\r\n  useEffect(() => {\r\n    // reloads data when the params change\r\n    if (productId) {\r\n      dispatch(addToCart(productId, date, time));\r\n    }\r\n  }, [dispatch, productId, date, time]);\r\n\r\n  // remove item from cart handler\r\n  const removeItemHandler = (id) => {\r\n    // console.log('remove')\r\n    dispatch(removeFromCart(id));\r\n  };\r\n\r\n  // checkout handler, redirect to login if not logged in, or placeorder where they can make the payment\r\n  const checkoutHandler = () => {\r\n    history.push(\"/login?redirect=placeorder\");\r\n  };\r\n\r\n  // to render\r\n  return (\r\n    <Row>\r\n      <Col md={10}>\r\n        <h1>Bookings Cart</h1>\r\n        {cartItems.length === 0 ? (\r\n          <h2>Nothing here</h2>\r\n        ) : (\r\n          <ListGroup>\r\n            {cartItems.map((item) => (\r\n              <ListGroup.Item key={item.product}>\r\n                <Row className='text-center'>\r\n                  <Col md={2}>{item.name}</Col>\r\n                  <Col md={2}>{item.brand}</Col>\r\n                  <Col md={2}>{item.category}</Col>\r\n                  <Col md={2}>{item.date}</Col>\r\n                  <Col md={2}>{item.time}</Col>\r\n                  <Col md={1}>€{item.price}</Col>\r\n                  <Col md={1}>\r\n                    <Button\r\n                      className='btn'\r\n                      variant='danger'\r\n                      size='sm'\r\n                      onClick={() => removeItemHandler(item.product)}\r\n                    >\r\n                      <i className='fas fa-trash-alt'></i>\r\n                    </Button>\r\n                  </Col>\r\n                </Row>\r\n              </ListGroup.Item>\r\n            ))}\r\n          </ListGroup>\r\n        )}\r\n      </Col>\r\n      <Col md={2}>\r\n        <Card>\r\n          <ListGroup>\r\n            <ListGroup.Item>\r\n              <h5>Subtotal</h5>\r\n              <h5>\r\n                €\r\n                {cartItems\r\n                  .reduce((acc, item) => acc + item.price, 0)\r\n                  .toFixed(2)}\r\n              </h5>\r\n            </ListGroup.Item>\r\n            <ListGroup.Item>\r\n              <Button\r\n                type='button'\r\n                className='btn'\r\n                disabled={cartItems.length === 0 ? true : false}\r\n                onClick={checkoutHandler}\r\n              >\r\n                Checkout\r\n              </Button>\r\n            </ListGroup.Item>\r\n          </ListGroup>\r\n        </Card>\r\n      </Col>\r\n    </Row>\r\n  );\r\n};\r\n\r\nexport default CartScreen;\r\n","import axios from \"axios\"; // we make a call to our apis Mario\r\nimport { CART_ADD_ITEM, CART_REMOVE_ITEM } from \"../constants/cartConstants\";\r\n\r\nexport const addToCart = (id, date, time) => async (dispatch, getState) => {\r\n  const { data } = await axios.get(`/api/products/${id}`);\r\n\r\n  dispatch({\r\n    type: CART_ADD_ITEM,\r\n    payload: {\r\n      product: data._id,\r\n      name: data.name,\r\n      image: data.image,\r\n      price: data.price,\r\n      brand: data.brand,\r\n      category: data.category,\r\n      date,\r\n      time,\r\n    },\r\n  });\r\n\r\n  // we need to patse the object into a string because we can only keep strings in local storage\r\n  localStorage.setItem(\"cartItems\", JSON.stringify(getState().cart.cartItems));\r\n};\r\n\r\nexport const removeFromCart = (id) => (dispatch, getState) => {\r\n  dispatch({\r\n    type: CART_REMOVE_ITEM,\r\n    payload: id,\r\n  });\r\n\r\n  localStorage.setItem(\"cartItems\", JSON.stringify(getState().cart.cartItems));\r\n};\r\n","import React from 'react'\r\nimport { Container, Row, Col} from 'react-bootstrap'\r\n\r\nconst FormContainer = ({children}) => {\r\n    // we extract the children from the props to load the content from it\r\n    return (\r\n        <Container>\r\n            <Row className='justify-content-md-center'>\r\n                <Col xs={12} md={6}>\r\n                    {children}\r\n                </Col>\r\n            </Row>\r\n            \r\n        </Container>\r\n    )\r\n}\r\n\r\nexport default FormContainer\r\n","import React, { useState, useEffect } from \"react\";\r\nimport { Link } from \"react-router-dom\";\r\nimport { Form, Button, Row, Col, Spinner, Alert } from \"react-bootstrap\";\r\nimport FormContainer from \"../components/FormContainer\";\r\nimport { login } from \"../actions/userActions\";\r\nimport { useDispatch, useSelector } from \"react-redux\";\r\n\r\nconst LoginScreen = ({ location, history }) => {\r\n  // component level state\r\n  const [email, setEmail] = useState(\"\");\r\n  const [password, setPassword] = useState(\"\");\r\n\r\n  const dispatch = useDispatch();\r\n\r\n  const userLogin = useSelector((state) => state.userLogin); // useSelector is what gives me access to the state, the function takes the state and we request the userLogin form the state\r\n  const { loading, error, userInfo } = userLogin; // we defined these in the user reducer and extract it's values\r\n\r\n  const redirect = location.search ? location.search.split(\"=\")[1] : \"/\"; // this redirect function is what takes us to the next screen based on the information of the url\r\n\r\n\r\n  // REDIRECT IF WE ARE LOGGED IN // \r\n  useEffect(() => {\r\n    if (userInfo) { // if userIfo exists, go to the redirect url\r\n      history.push(redirect);\r\n    }\r\n  }, [history, userInfo, redirect]);\r\n\r\n  // the e stands for event, so this is what happens when the event is triggered\r\n  const submitHandler = (e) => {\r\n    e.preventDefault();\r\n    dispatch(login(email, password)); // I pass my user and password info from the form\r\n  };\r\n\r\n  return (\r\n    <FormContainer>\r\n      <h1 className='text-center'>Welcome Back!</h1>\r\n      {error && <Alert variant='danger'>{error}</Alert>}\r\n      {loading && <Spinner />}\r\n      <Form onSubmit={submitHandler}>\r\n        <Form.Group controlId='email'>\r\n          <Form.Label>Email</Form.Label>\r\n          <Form.Control\r\n            type='email'\r\n            placeholder='Enter email'\r\n            value={email}\r\n            onChange={(e) => setEmail(e.target.value)}\r\n          ></Form.Control>\r\n        </Form.Group>\r\n        <Form.Group controlId='password'>\r\n          <Form.Label>Password</Form.Label>\r\n          <Form.Control\r\n            type='password'\r\n            placeholder='Enter password'\r\n            value={password}\r\n            onChange={(e) => setPassword(e.target.value)}\r\n          ></Form.Control>\r\n        </Form.Group>\r\n        <Button type='submit' variant='info'>\r\n          Sign In\r\n        </Button>\r\n      </Form>\r\n\r\n      <Row className='py-3'>\r\n        <Col>\r\n          <p>New on Expatologist?</p>\r\n          <Link to={redirect ? `/register?redirect=${redirect}` : \"/register\"}>\r\n            Register now!\r\n          </Link>\r\n        </Col>\r\n      </Row>\r\n    </FormContainer>\r\n  );\r\n};\r\n\r\nexport default LoginScreen;\r\n","import React, { useState, useEffect } from \"react\";\r\nimport { Link } from \"react-router-dom\";\r\nimport { Form, Button, Row, Col, Spinner, Alert } from \"react-bootstrap\";\r\nimport FormContainer from \"../components/FormContainer\";\r\nimport { register } from \"../actions/userActions\";\r\nimport { useDispatch, useSelector } from \"react-redux\";\r\n\r\n// IMPORTANT\r\n// I created this page copying the content from the login screen\r\n// as the functionality is very similar, just a couple of changes\r\n\r\nconst RegisterScreen = ({ location, history }) => {\r\n  // component level state\r\n  const [name, setName] = useState(\"\");\r\n  const [email, setEmail] = useState(\"\");\r\n  const [password, setPassword] = useState(\"\");\r\n  const [confirmPassword, setConfirmPassword] = useState(\"\");\r\n  const [message, setMessage] = useState(null);\r\n\r\n  const dispatch = useDispatch();\r\n\r\n  const userRegister = useSelector((state) => state.userRegister); // useSelector is what gives me access to the state, the function takes the state and we request the userRegister form the state\r\n  const { loading, error, userInfo } = userRegister; // we defined these in the user reducer and extract it's values\r\n\r\n  const redirect = location.search ? location.search.split(\"=\")[1] : \"/\"; // this redirect function is what takes us to the next screen based on the information of the url\r\n\r\n  // REDIRECT IF WE ARE LOGGED IN //\r\n  useEffect(() => {\r\n    if (userInfo) {\r\n      // if userIfo exists, go to the redirect url\r\n      history.push(redirect);\r\n    }\r\n  }, [history, userInfo, redirect]);\r\n\r\n  // the e stands for event, so this is what happens when the event is triggered\r\n  const submitHandler = (e) => {\r\n    e.preventDefault();\r\n    if (password !== confirmPassword) {\r\n      setMessage(\"Passwords do not match\");\r\n    } else {\r\n      dispatch(register(name, email, password));\r\n    }\r\n  };\r\n\r\n  return (\r\n    <FormContainer>\r\n      <h1 className='text-center'>REGISTER</h1>\r\n      {message && <Alert variant='danger'>{message}</Alert>}\r\n      {error && <Alert variant='danger'>{error}</Alert>}\r\n      {loading && <Spinner />}\r\n      <Form onSubmit={submitHandler}>\r\n        <Form.Group controlId='name'>\r\n          <Form.Label>Name</Form.Label>\r\n          <Form.Control\r\n            type='name'\r\n            placeholder='Enter name'\r\n            value={name}\r\n            onChange={(e) => setName(e.target.value)}\r\n          ></Form.Control>\r\n        </Form.Group>\r\n        <Form.Group controlId='email'>\r\n          <Form.Label>Email</Form.Label>\r\n          <Form.Control\r\n            type='email'\r\n            placeholder='Enter email'\r\n            value={email}\r\n            onChange={(e) => setEmail(e.target.value)}\r\n          ></Form.Control>\r\n        </Form.Group>\r\n        <Form.Group controlId='password'>\r\n          <Form.Label>Password</Form.Label>\r\n          <Form.Control\r\n            type='password'\r\n            placeholder='Enter password'\r\n            value={password}\r\n            onChange={(e) => setPassword(e.target.value)}\r\n          ></Form.Control>\r\n        </Form.Group>\r\n        <Form.Group controlId='confirmPassword'>\r\n          <Form.Label>Confirm Password</Form.Label>\r\n          <Form.Control\r\n            type='password'\r\n            placeholder='Enter password'\r\n            value={confirmPassword}\r\n            onChange={(e) => setConfirmPassword(e.target.value)}\r\n          ></Form.Control>\r\n        </Form.Group>\r\n        <Button type='submit' variant='info'>\r\n          Register\r\n        </Button>\r\n      </Form>\r\n      <Row className='py-3'>\r\n        <Col>\r\n          <p>Already have an account?</p>\r\n          <Link to={redirect ? `/login?redirect=${redirect}` : \"/login\"}>\r\n            Login\r\n          </Link>\r\n        </Col>\r\n      </Row>\r\n    </FormContainer>\r\n  );\r\n};\r\n\r\nexport default RegisterScreen;\r\n","import React, { useEffect } from \"react\";\r\nimport {\r\n  Button,\r\n  Row,\r\n  Col,\r\n  ListGroup,\r\n  Image,\r\n  Card,\r\n  Alert,\r\n  ListGroupItem,\r\n} from \"react-bootstrap\";\r\nimport { useDispatch, useSelector } from \"react-redux\";\r\nimport { createOrder } from \"../actions/orderActions\";\r\nimport { ORDER_CREATE_RESET } from \"../constants/orderConstants\";\r\n\r\nconst PlaceOrderScreen = ({ history }) => {\r\n  const cart = useSelector((state) => state.cart);\r\n\r\n  const dispatch = useDispatch();\r\n\r\n  // console.log(cart.cartItems)\r\n\r\n  // extract information about the order, if success, everything is ok\r\n  const orderCreate = useSelector((state) => state.orderCreate);\r\n  const { order, success, error } = orderCreate;\r\n\r\n  // use effect validates changes in the state and reloads when detected\r\n  useEffect(() => {\r\n    if (success) {\r\n      history.push(`/order/${order._id}`); // we move to the order id page\r\n      dispatch({ type: ORDER_CREATE_RESET }); // this changes the status of the order and allow us to create more orders\r\n    }\r\n    // eslint-disable-next-line\r\n  }, [history, success]);\r\n\r\n  const placeOrderHandler = () => {\r\n    // IDEA, THIS PLACEORDER HALDER MUST SUBMIT THE PAYMENT, IF SUCCESFULL, THE WE DISPATCH THE ORDER\r\n    // TO CREATE IT ON THE DATABASE, AND THEN WE CAN STORE THE PAYMENT METHOD WITHIN THE PAYLOAD AND USE IT\r\n    // IN THE BACKEND TO SAVE IT. THEN WE CAN REFRESH THE THE PAGE WITH THE USE EFFECT ABOVE, WHICH WILL\r\n    // CHANGE ONCE THE ORDER IS CREATED, AND WITH THAT, WE CAN DISPLAY THE INFORMATION OF THE ORDER AND\r\n    // CONFIRM THE PAYMENT, THIS WAY, I WONT NEED TO CREATE MORE SCREENS\r\n\r\n    dispatch(\r\n      createOrder({\r\n        orderItems: cart.cartItems,\r\n        itemsPrice: cart.itemsPrice,\r\n        taxPrice: cart.taxPrice,\r\n        totalPrice: cart.totalPrice,\r\n      })\r\n    );\r\n  };\r\n\r\n  // CALCULATE TOTAL COST AND PRICES\r\n  cart.itemsPrice = cart.cartItems\r\n    .reduce((acc, item) => acc + item.price, 0)\r\n    .toFixed(2);\r\n  cart.taxPrice = Number((0.15 * cart.itemsPrice).toFixed(2));\r\n  cart.totalPrice = (Number(cart.itemsPrice) + Number(cart.taxPrice)).toFixed(\r\n    2\r\n  );\r\n\r\n  return (\r\n    <Row>\r\n      <Col md={8}>\r\n        <ListGroup variant='flush'>\r\n          <ListGroup.Item>\r\n            <h2>Bookings to pay</h2>\r\n            {cart.cartItems.length === 0 ? (\r\n              <Alert>Nothing here</Alert>\r\n            ) : (\r\n              <ListGroup variant='flush'>\r\n                {cart.cartItems.map((item, index) => (\r\n                  <ListGroup.Item key={index}>\r\n                    <Row className='text-center'>\r\n                      <Col md={1}>\r\n                        <Image src={item.image} alt={item.name} fluid rounded />\r\n                      </Col>\r\n                      <Col md={3}>{item.name}</Col>\r\n                      <Col md={3}>{item.date}</Col>\r\n                      <Col md={2}>{item.time}</Col>\r\n                      <Col md={2}>€{item.price}</Col>\r\n                    </Row>\r\n                  </ListGroup.Item>\r\n                ))}\r\n              </ListGroup>\r\n            )}\r\n          </ListGroup.Item>\r\n        </ListGroup>\r\n      </Col>\r\n      <Col md={4}>\r\n        <ListGroup variant='flush'>\r\n          <ListGroup.Item className='text-center'>\r\n            <h2>Summary</h2>\r\n          </ListGroup.Item>\r\n          <ListGroupItem>\r\n            <Row>\r\n              <Col>Price:</Col>\r\n              <Col>€{cart.itemsPrice}</Col>\r\n            </Row>\r\n          </ListGroupItem>\r\n          <ListGroupItem>\r\n            <Row>\r\n              <Col>Tax:</Col>\r\n              <Col>€{cart.taxPrice}</Col>\r\n            </Row>\r\n          </ListGroupItem>\r\n          <ListGroupItem>\r\n            <Row>\r\n              <Col>Total:</Col>\r\n              <Col>€{cart.totalPrice}</Col>\r\n            </Row>\r\n          </ListGroupItem>\r\n          <ListGroup.Item>{error && <Alert>{error}</Alert>}</ListGroup.Item>\r\n          <ListGroup.Item>\r\n            <Button\r\n              type='button'\r\n              className='btn-block'\r\n              onClick={placeOrderHandler}\r\n            >\r\n              Book appointment!\r\n            </Button>\r\n          </ListGroup.Item>\r\n        </ListGroup>\r\n      </Col>\r\n    </Row>\r\n  );\r\n};\r\n\r\nexport default PlaceOrderScreen;\r\n","import axios from \"axios\";\r\nimport { CART_CLEAR_ITEMS } from \"../constants/cartConstants\";\r\nimport {\r\n  ORDER_CREATE_REQUEST,\r\n  ORDER_CREATE_SUCCESS,\r\n  ORDER_CREATE_FAIL,\r\n  ORDER_LIST_MY_REQUEST,\r\n  ORDER_LIST_MY_SUCCESS,\r\n  ORDER_LIST_MY_FAIL,\r\n  ORDER_LIST_FAIL,\r\n  ORDER_LIST_SUCCESS,\r\n  ORDER_LIST_REQUEST,\r\n  ORDER_DETAILS_SUCCESS,\r\n  ORDER_DETAILS_FAIL,\r\n  ORDER_DETAILS_REQUEST,\r\n} from \"../constants/orderConstants\";\r\nimport { logout } from \"./userActions\";\r\n\r\nexport const createOrder = (order) => async (dispatch, getState) => {\r\n  try {\r\n    dispatch({\r\n      type: ORDER_CREATE_REQUEST,\r\n    });\r\n\r\n    const {\r\n      userLogin: { userInfo },\r\n    } = getState();\r\n\r\n    const config = {\r\n      headers: {\r\n        \"Content-Type\": \"application/json\",\r\n        Authorization: `Bearer ${userInfo.token}`,\r\n      },\r\n    };\r\n\r\n    const { data } = await axios.post(`/api/orders`, order, config);\r\n\r\n    dispatch({\r\n      type: ORDER_CREATE_SUCCESS,\r\n      payload: data,\r\n    });\r\n    dispatch({\r\n      type: CART_CLEAR_ITEMS,\r\n      payload: data,\r\n    });\r\n    localStorage.removeItem(\"cartItems\");\r\n  } catch (error) {\r\n    const message =\r\n      error.response && error.response.data.message\r\n        ? error.response.data.message\r\n        : error.message;\r\n    if (message === \"Not authorized, token failed\") {\r\n      dispatch(logout());\r\n    }\r\n    dispatch({\r\n      type: ORDER_CREATE_FAIL,\r\n      payload: message,\r\n    });\r\n  }\r\n};\r\n\r\n// action for cheking the list of orders\r\nexport const listMyOrders = () => async (dispatch, getState) => {\r\n  try {\r\n    dispatch({\r\n      type: ORDER_LIST_MY_REQUEST,\r\n    });\r\n\r\n    const {\r\n      userLogin: { userInfo },\r\n    } = getState();\r\n\r\n    const config = {\r\n      headers: {\r\n        Authorization: `Bearer ${userInfo.token}`,\r\n      },\r\n    };\r\n\r\n    const { data } = await axios.get(`/api/orders/myorders`, config);\r\n\r\n    dispatch({\r\n      type: ORDER_LIST_MY_SUCCESS,\r\n      payload: data,\r\n    });\r\n  } catch (error) {\r\n    const message =\r\n      error.response && error.response.data.message\r\n        ? error.response.data.message\r\n        : error.message;\r\n    if (message === \"Not authorized, token failed\") {\r\n      dispatch(logout());\r\n    }\r\n    dispatch({\r\n      type: ORDER_LIST_MY_FAIL,\r\n      payload: message,\r\n    });\r\n  }\r\n};\r\n\r\nexport const listOrders = () => async (dispatch, getState) => {\r\n  try {\r\n    dispatch({\r\n      type: ORDER_LIST_REQUEST,\r\n    });\r\n\r\n    const {\r\n      userLogin: { userInfo },\r\n    } = getState();\r\n\r\n    const config = {\r\n      headers: {\r\n        Authorization: `Bearer ${userInfo.token}`,\r\n      },\r\n    };\r\n\r\n    const { data } = await axios.get(`/api/orders`, config);\r\n\r\n    dispatch({\r\n      type: ORDER_LIST_SUCCESS,\r\n      payload: data,\r\n    });\r\n  } catch (error) {\r\n    const message =\r\n      error.response && error.response.data.message\r\n        ? error.response.data.message\r\n        : error.message;\r\n    if (message === \"Not authorized, token failed\") {\r\n      dispatch(logout());\r\n    }\r\n    dispatch({\r\n      type: ORDER_LIST_FAIL,\r\n      payload: message,\r\n    });\r\n  }\r\n};\r\n\r\n// order details action\r\nexport const getOrderDetails = (id) => async (dispatch, getState) => {\r\n  try {\r\n    dispatch({\r\n      type: ORDER_DETAILS_REQUEST,\r\n    });\r\n\r\n    const {\r\n      userLogin: { userInfo },\r\n    } = getState();\r\n\r\n    const config = {\r\n      headers: {\r\n        Authorization: `Bearer ${userInfo.token}`,\r\n      },\r\n    };\r\n\r\n    const { data } = await axios.get(`/api/orders/${id}`, config);\r\n\r\n    dispatch({\r\n      type: ORDER_DETAILS_SUCCESS,\r\n      payload: data,\r\n    });\r\n  } catch (error) {\r\n    dispatch({\r\n      type: ORDER_DETAILS_FAIL,\r\n      payload:\r\n        error.response && error.response.data.message\r\n          ? error.response.data.message\r\n          : error.message,\r\n    });\r\n  }\r\n};\r\n","import React, { useState, useEffect } from \"react\";\r\nimport { Table, Form, Button, Row, Col, Spinner, Alert, ListGroup, Image } from \"react-bootstrap\";\r\nimport { LinkContainer } from \"react-router-bootstrap\";\r\nimport { useDispatch, useSelector } from \"react-redux\";\r\nimport { listMyOrders } from \"../actions/orderActions\";\r\n\r\nconst OrdersScreen = ({ location, history }) => {\r\n  const dispatch = useDispatch();\r\n\r\n  const userDetails = useSelector((state) => state.userDetails);\r\n  const { user } = userDetails;\r\n\r\n  const userLogin = useSelector((state) => state.userLogin);\r\n  const { userInfo } = userLogin;\r\n\r\n  const orderListMy = useSelector((state) => state.orderListMy);\r\n  const { loading: loadingOrders, error: errorOrders, orders } = orderListMy;\r\n\r\n  useEffect(() => {\r\n    if (!userInfo) {\r\n      history.push(\"/login\");\r\n    } else {\r\n      if (!user.name) {\r\n        dispatch(listMyOrders());\r\n      }\r\n    }\r\n  }, [dispatch, history, userInfo, user]);\r\n\r\n  return (\r\n    <Col>\r\n      <h2>My Bookings</h2>\r\n      {loadingOrders ? (\r\n        <Spinner />\r\n      ) : errorOrders ? (\r\n        <Alert variant='danger'>{errorOrders}</Alert>\r\n      ) : (\r\n        <Table striped bordered hover responsive className='table-sm'>\r\n          <thead>\r\n            <tr>\r\n              <th>ID</th>\r\n              <th>DATE</th>\r\n              <th>TOTAL</th>\r\n              <th>DETAILS</th>\r\n            </tr>\r\n          </thead>\r\n          <tbody>\r\n            {orders.map((order) => (\r\n              <tr key={order._id}>\r\n                <td>{order._id}</td>\r\n                <td>{order.createdAt.substring(0, 10)}</td>\r\n                <td>€{order.totalPrice}</td>\r\n                <td>\r\n                  <Table>\r\n                    <tbody>\r\n                      <ListGroup>\r\n                        {order.orderItems.map((item, index) => (\r\n                               <ListGroup.Item key={index}>\r\n                               <Row className='text-center'>\r\n                                 <Col md={1}>\r\n                                   <Image src={item.image} alt={item.name} fluid rounded />\r\n                                 </Col>\r\n                                 <Col md={3}>{item.name}</Col>\r\n                                 <Col md={3}>{item.date}</Col>\r\n                                 <Col md={2}>{item.time}</Col>\r\n                                 <Col md={2}>€{item.price}</Col>\r\n                               </Row>\r\n                             </ListGroup.Item>\r\n                        ))}\r\n                      </ListGroup>\r\n                    </tbody>\r\n                  </Table>\r\n                </td>\r\n              </tr>\r\n            ))}\r\n          </tbody>\r\n        </Table>\r\n      )}\r\n    </Col>\r\n  );\r\n};\r\n\r\nexport default OrdersScreen;\r\n","import React, { useEffect } from 'react'\r\nimport { LinkContainer } from 'react-router-bootstrap'\r\nimport { Table, Button, Alert, Spinner, ListGroup, Row, Image, Col } from 'react-bootstrap'\r\nimport { useDispatch, useSelector } from 'react-redux'\r\nimport { listOrders } from '../actions/orderActions'\r\n\r\nconst OrderListScreen = ({ history }) => {\r\n  const dispatch = useDispatch()\r\n\r\n  const orderList = useSelector((state) => state.orderList)\r\n  const { loading, error, orders } = orderList\r\n\r\n  const userLogin = useSelector((state) => state.userLogin)\r\n  const { userInfo } = userLogin\r\n\r\n  useEffect(() => {\r\n    if (userInfo && userInfo.isAdmin) {\r\n      dispatch(listOrders())\r\n    } else {\r\n      history.push('/login')\r\n    }\r\n  }, [dispatch, history, userInfo])\r\n\r\n  return (\r\n    <>\r\n      <h1>Appointments</h1>\r\n      {loading ? (\r\n        <Spinner />\r\n      ) : error ? (\r\n        <Alert variant='danger'>{error}</Alert>\r\n      ) : (\r\n        <Table striped bordered hover responsive className='table-sm'>\r\n          <thead>\r\n            <tr>\r\n              <th>ID</th>\r\n              <th>USER</th>\r\n              <th>DATE</th>\r\n              <th>TOTAL</th>\r\n              <th>COMPLETE</th>\r\n              <th>DETAILS</th>\r\n              <th></th>\r\n            </tr>\r\n          </thead>\r\n          <tbody>\r\n            {orders.map((order) => (\r\n              <tr key={order._id}>\r\n                <td>{order._id}</td>\r\n                <td>{order.user && order.user.name}</td>\r\n                <td>{order.createdAt.substring(0, 10)}</td>\r\n                <td>${order.totalPrice}</td>\r\n                <td>\r\n                  {order.isPaid ? (\r\n                    order.paidAt.substring(0, 10)\r\n                  ) : (\r\n                    <i className='fas fa-times' style={{ color: 'red' }}></i>\r\n                  )}\r\n                </td>\r\n                <td>\r\n                <Table>\r\n                    <tbody>\r\n                      <ListGroup>\r\n                        {order.orderItems.map((item, index) => (\r\n                               <ListGroup.Item key={index}>\r\n                               <Row className='text-center'>\r\n                                 <Col md={1}>\r\n                                   <Image src={item.image} alt={item.name} fluid rounded />\r\n                                 </Col>\r\n                                 <Col md={4}>{item.name}</Col>\r\n                                 <Col md={4}>{item.date}</Col>\r\n                                 <Col md={2}>{item.time}</Col>\r\n                                 {/* <Col md={2}>€{item.price}</Col> */}\r\n                               </Row>\r\n                             </ListGroup.Item>\r\n                        ))}\r\n                      </ListGroup>\r\n                    </tbody>\r\n                  </Table>\r\n                </td>\r\n              </tr>\r\n            ))}\r\n          </tbody>\r\n        </Table>\r\n      )}\r\n    </>\r\n  )\r\n}\r\n\r\nexport default OrderListScreen","import React, { useEffect } from \"react\";\r\nimport { LinkContainer } from \"react-router-bootstrap\";\r\nimport { Table, Button, Row, Col, Alert, Spinner } from \"react-bootstrap\";\r\nimport { useDispatch, useSelector } from \"react-redux\";\r\nimport {\r\n  listProducts,\r\n  deleteProduct,\r\n  createProduct,\r\n} from \"../actions/productActions\";\r\nimport { PRODUCT_CREATE_RESET } from \"../constants/productConstants\";\r\n\r\nconst ProductListScreen = ({ history, match }) => {\r\n  const dispatch = useDispatch();\r\n\r\n  const productList = useSelector((state) => state.productList);\r\n  const { loading, error, products } = productList;\r\n\r\n  const productDelete = useSelector((state) => state.productDelete);\r\n  const {\r\n    loading: loadingDelete,\r\n    error: errorDelete,\r\n    success: successDelete,\r\n  } = productDelete;\r\n\r\n  const productCreate = useSelector((state) => state.productCreate)\r\n  const {\r\n    loading: loadingCreate,\r\n    error: errorCreate,\r\n    success: successCreate,\r\n    product: createdProduct,\r\n  } = productCreate\r\n\r\n  const userLogin = useSelector((state) => state.userLogin);\r\n  const { userInfo } = userLogin;\r\n\r\n  useEffect(() => {\r\n    dispatch({ type: PRODUCT_CREATE_RESET }); // this will reset the state\r\n\r\n    if (!userInfo.isAdmin) {\r\n      history.push(\"/login\");\r\n    }\r\n\r\n    if (successCreate) {\r\n      history.push(`/admin/product/${createdProduct._id}/edit`);\r\n    } else {\r\n      dispatch(listProducts());\r\n    }\r\n  }, [\r\n    dispatch,\r\n    history,\r\n    userInfo,\r\n    successDelete,\r\n    successCreate,\r\n    createdProduct,\r\n  ]); // check changes in these dependencies\r\n\r\n  // delete handler\r\n  const deleteHandler = (id) => {\r\n    if (window.confirm(\"Are you sure\")) {\r\n      // invoke a confimation window\r\n      dispatch(deleteProduct(id));\r\n    }\r\n  };\r\n\r\n  // create handler\r\n  const createProductHandler = (product) => {\r\n    dispatch(createProduct())\r\n  };\r\n\r\n  return (\r\n    <>\r\n      <Row className='align-items-center'>\r\n        <Col>\r\n          <h1>Counsellors</h1>\r\n        </Col>\r\n        <Col className='text-right'>\r\n          <Button className='my-3' onClick={createProductHandler}>\r\n            <i className='fas fa-plus'></i> Add Counsellor\r\n          </Button>\r\n        </Col>\r\n      </Row>\r\n      {loadingDelete && <Spinner />}\r\n      {errorDelete && <Alert variant='danger'>{errorDelete}</Alert>}\r\n      {loadingCreate && <Spinner />}\r\n      {errorCreate && <Alert variant='danger'>{errorCreate}</Alert>}\r\n      {loading ? (\r\n        <Spinner />\r\n      ) : error ? (\r\n        <Alert variant='danger'>{error}</Alert>\r\n      ) : (\r\n        <Table striped bordered hover responsive className='table-sm'>\r\n          <thead>\r\n            <tr>\r\n              <th>ID</th>\r\n              <th>NAME</th>\r\n              <th>PRICE</th>\r\n              <th>SPECIALIZATION</th>\r\n              <th>COUNTRY</th>\r\n            </tr>\r\n          </thead>\r\n          <tbody>\r\n            {products.map((product) => (\r\n              <tr key={product._id}>\r\n                <td>{product._id}</td>\r\n                <td>{product.name}</td>\r\n                <td>{product.price}</td>\r\n                <td>{product.category}</td>\r\n                <td>{product.brand}</td>\r\n                <td>\r\n                  <LinkContainer to={`/admin/product/${product._id}/edit`}>\r\n                    <Button variant='light' className='btn-sm'>\r\n                      <i className='fas fa-edit'></i>\r\n                    </Button>\r\n                  </LinkContainer>\r\n                  <Button\r\n                    variant='danger'\r\n                    className='btn-sm'\r\n                    onClick={() => deleteHandler(product._id)}\r\n                  >\r\n                    <i className='fas fa-trash'></i>\r\n                  </Button>\r\n                </td>\r\n              </tr>\r\n            ))}\r\n          </tbody>\r\n        </Table>\r\n      )}\r\n    </>\r\n  );\r\n};\r\n\r\nexport default ProductListScreen;\r\n","import React, { useState, useEffect } from \"react\";\r\nimport { Link } from \"react-router-dom\";\r\nimport { Form, Button, Alert, Spinner, InputGroup } from \"react-bootstrap\";\r\nimport { useDispatch, useSelector } from \"react-redux\";\r\nimport FormContainer from \"../components/FormContainer\";\r\nimport { listProductDetails, updateProduct } from \"../actions/productActions\";\r\nimport { PRODUCT_UPDATE_RESET } from \"../constants/productConstants\";\r\n\r\nconst ProductEditScreen = ({ match, history }) => {\r\n  const productId = match.params.id; // get the product id from the url\r\n\r\n  // useState to handle changes and store them as they change\r\n  const [name, setName] = useState(\"\");\r\n  const [price, setPrice] = useState(0);\r\n  const [image, setImage] = useState(\"\");\r\n  const [brand, setBrand] = useState(\"\");\r\n  const [category, setCategory] = useState(\"\");\r\n  const [description, setDescription] = useState(\"\");\r\n\r\n  const dispatch = useDispatch(); // use dispatch to make use of our actions\r\n\r\n  const productDetails = useSelector((state) => state.productDetails);\r\n  const { loading, error, product } = productDetails; //deconstruct data\r\n\r\n  const productUpdate = useSelector((state) => state.productUpdate);\r\n  const {\r\n    loading: loadingUpdate,\r\n    error: errorUpdate,\r\n    success: successUpdate,\r\n  } = productUpdate; //deconstruct data\r\n\r\n  // with use effect we reload the components when certain dependencies change\r\n  useEffect(() => {\r\n    // if update info is ok, we move to the counsellors list\r\n    if (successUpdate) {\r\n      dispatch({ type: PRODUCT_UPDATE_RESET });\r\n      history.push(\"/admin/productlist\");\r\n      // else, do the second check\r\n    } else {\r\n      if (!product.name || product._id !== productId) {\r\n        // if I dont have these fields\r\n        dispatch(listProductDetails(productId)); // dispatch the details of certain id\r\n      } else {\r\n        // else, set the content from the input\r\n        setName(product.name);\r\n        setPrice(product.price);\r\n        setImage(product.image);\r\n        setBrand(product.brand);\r\n        setCategory(product.category);\r\n        setDescription(product.description);\r\n      }\r\n    }\r\n  }, [dispatch, history, productId, product, successUpdate]);\r\n\r\n  // on submit\r\n  const submitHandler = (e) => {\r\n    e.preventDefault();\r\n    dispatch(\r\n      updateProduct({\r\n        _id: productId,\r\n        name,\r\n        price,\r\n        image,\r\n        brand,\r\n        category,\r\n        description,\r\n      })\r\n    );\r\n  };\r\n\r\n  return (\r\n    <>\r\n      <Link to='/admin/productlist' className='btn btn-light my-3'>\r\n        Go Back\r\n      </Link>\r\n      <FormContainer>\r\n        <h1>Edit Counsellor info</h1>\r\n        {loadingUpdate && <Spinner />}\r\n        {errorUpdate && <Alert variant='danger'>{errorUpdate}</Alert>}\r\n        {loading ? (\r\n          <Spinner />\r\n        ) : error ? (\r\n          <Alert variant='danger'>{error}</Alert>\r\n        ) : (\r\n          <Form onSubmit={submitHandler}>\r\n            <Form.Group controlId='name'>\r\n              <Form.Label>Name</Form.Label>\r\n              <Form.Control\r\n                type='name'\r\n                placeholder='Enter name'\r\n                value={name}\r\n                onChange={(e) => setName(e.target.value)}\r\n              ></Form.Control>\r\n            </Form.Group>\r\n\r\n            <Form.Group controlId='price'>\r\n              <Form.Label>Price</Form.Label>\r\n              <Form.Control\r\n                type='number'\r\n                placeholder='Enter price'\r\n                value={price}\r\n                onChange={(e) => setPrice(e.target.value)}\r\n                required\r\n              ></Form.Control>\r\n            </Form.Group>\r\n\r\n            <Form.Group controlId='image'>\r\n              <Form.Label>Image</Form.Label>\r\n                <Form.Control\r\n                  type='text'\r\n                  placeholder='Enter image url'\r\n                  value={image}\r\n                  onChange={(e) => setImage(e.target.value)}\r\n                  required\r\n                />\r\n                <Form.Control.Feedback type=\"invalid\">\r\n                  Please provide a url.\r\n                </Form.Control.Feedback>\r\n            </Form.Group>\r\n\r\n            <Form.Group controlId='brand'>\r\n              <Form.Label>Country</Form.Label>\r\n              <Form.Control\r\n                type='text'\r\n                placeholder='Enter country'\r\n                value={brand}\r\n                onChange={(e) => setBrand(e.target.value)}\r\n              ></Form.Control>\r\n            </Form.Group>\r\n\r\n            <Form.Group controlId='category'>\r\n              <Form.Label>Specialization</Form.Label>\r\n              <Form.Control\r\n                type='text'\r\n                placeholder='Enter specialization'\r\n                value={category}\r\n                onChange={(e) => setCategory(e.target.value)}\r\n              ></Form.Control>\r\n            </Form.Group>\r\n\r\n            <Form.Group controlId='description'>\r\n              <Form.Label>Description</Form.Label>\r\n              <Form.Control\r\n                type='text'\r\n                placeholder='Enter description'\r\n                value={description}\r\n                onChange={(e) => setDescription(e.target.value)}\r\n              ></Form.Control>\r\n            </Form.Group>\r\n\r\n            <Button type='submit' variant='primary'>\r\n              Update\r\n            </Button>\r\n          </Form>\r\n        )}\r\n      </FormContainer>\r\n    </>\r\n  );\r\n};\r\n\r\nexport default ProductEditScreen;\r\n","import React, { useEffect } from \"react\";\r\nimport {\r\n  Button,\r\n  Row,\r\n  Col,\r\n  ListGroup,\r\n  Image,\r\n  Card,\r\n  Alert,\r\n  ListGroupItem,\r\n  Spinner,\r\n  Container,\r\n  Table,\r\n} from \"react-bootstrap\";\r\nimport { useDispatch, useSelector } from \"react-redux\";\r\nimport { getOrderDetails } from \"../actions/orderActions\";\r\n\r\nconst OrderScreen = ({ match }) => {\r\n  const orderId = match.params.id; // extract the id from the url\r\n\r\n  const dispatch = useDispatch();\r\n\r\n  const orderDetails = useSelector((state) => state.orderDetails); // extract info from the state\r\n  const { order, loading, error } = orderDetails;\r\n\r\n  useEffect(() => {\r\n    dispatch(getOrderDetails(orderId)); // bring the order data\r\n  }, [dispatch, orderId]);\r\n\r\n  return loading ? (\r\n    <Spinner />\r\n  ) : error ? (\r\n    <Alert variant='danger'>{error}</Alert>\r\n  ) : (\r\n    <>\r\n      <Container className='text-center'>\r\n        <h1>Happy days!</h1>\r\n        <h3>{order.user.name}, Your appointment is confirmed</h3>\r\n        <p>Order: {order._id}</p>\r\n      </Container>\r\n      <Table striped bordered hover responsive>\r\n        <thead>\r\n          <tr>\r\n            <th>Counsellor</th>\r\n            <th>Date</th>\r\n            <th>Time</th>\r\n          </tr>\r\n        </thead>\r\n        <tbody>\r\n          {order.orderItems.map((item) => (\r\n            <tr>\r\n              <td>{item.name}</td>\r\n              <td>{item.date}</td>\r\n              <td>{item.time}</td>\r\n            </tr>\r\n          ))}\r\n        </tbody>\r\n      </Table>\r\n    </>\r\n  );\r\n};\r\n\r\nexport default OrderScreen;\r\n","import React from \"react\";\nimport { BrowserRouter as Router, Route } from \"react-router-dom\";\nimport { Container } from \"react-bootstrap\";\nimport Header from \"./components/Header\";\nimport Footer from \"./components/Footer\";\nimport HomeScreen from \"./screens/HomeScreen\";\nimport ProductScreen from \"./screens/ProductScreen\";\nimport CartScreen from \"./screens/CartScreen\";\nimport LoginScreen from \"./screens/LoginScreen\";\nimport RegisterScreen from \"./screens/RegisterScreen\";\nimport PlaceOrderScreen from \"./screens/PlaceOrderScreen\";\nimport OrdersScreen from \"./screens/OrdersScreen\";\nimport OrderListScreen from \"./screens/OrderListScreen\";\nimport ProductListScreen from \"./screens/ProductListScreen\";\nimport ProductEditScreen from \"./screens/ProductEditScreen\";\nimport OrderScreen from \"./screens/OrderScreen\";\n\n// this is where I put the routes of the different screens\n\nconst App = () => {\n  return (\n    <Router>\n      <Header />\n      <main className='py-3'>\n        <Container>\n          <Route path='/login' component={LoginScreen} />\n          <Route path='/placeorder' component={PlaceOrderScreen} />\n          <Route path='/register' component={RegisterScreen} />\n          <Route path='/orders' component={OrdersScreen} />\n          <Route path='/order/:id' component={OrderScreen} />\n          <Route path='/product/:id' component={ProductScreen} />\n          <Route path='/cart/:id?' component={CartScreen} />\n          <Route path='/admin/productlist' component={ProductListScreen} />\n          <Route path='/admin/orderList' component={OrderListScreen} />\n          <Route path='/admin/product/:id/edit' component={ProductEditScreen} />\n          <Route path='/search/:keyword' component={HomeScreen} exact />\n          <Route path='/' component={HomeScreen} exact />\n        </Container>\n      </main>\n      <Footer />\n    </Router>\n  );\n};\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport { Provider } from \"react-redux\"; // the provider that supplies the app\nimport store from \"./store\";\nimport \"./bootstrap.min.css\";\nimport \"./index.css\";\nimport App from \"./App\";\nimport reportWebVitals from \"./reportWebVitals\";\n\n// note to me. Redux follows the load only once flow, that is why we have the concept of a store and a state manager\n// action -> reducer -> store -> ui -> action ....\n// the action triggers the reducer and the reducer the store\n\nReactDOM.render(\n  <Provider store={store}>\n    <App />\n  </Provider>,\n  document.getElementById(\"root\")\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}